name: Build Android

on:
  push:
    branches: [ main ]
  # 也可以手动触发
  workflow_dispatch:

jobs:
  build_android:
    runs-on: ubuntu-latest
    # 添加环境变量来绕过SDK版本检查
    env:
      PUB_ALLOW_PRERELEASE_SDK: 1
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      
      # 创建临时构建分支并替换依赖
      - name: Create build branch with patched dependencies
        run: |
          git checkout -b temp-build-branch
          
          # 替换video_trimmer依赖为其它可用的视频修剪库
          sed -i 's|video_trimmer:.*|video_player: ^2.8.1|' pubspec.yaml
          # 确保是合法的YAML，删除可能多余的行
          sed -i '/ref: main/d' pubspec.yaml
          
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add pubspec.yaml
          git commit -m "Temporary build fix: Replace video_trimmer with direct video_player"
      
      # 直接下载Flutter并设置环境变量
      - name: Download and setup Flutter
        run: |
          mkdir -p $HOME/flutter
          wget -q https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.24.0-stable.tar.xz
          tar xf flutter_linux_3.24.0-stable.tar.xz -C $HOME
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
        
      - name: Print Flutter/Dart versions
        run: |
          flutter --version
          dart --version
        
      - name: Get Flutter dependencies
        run: flutter pub get
        
      - name: Build APK
        run: flutter build apk --release
        
      # 将APK复制到可访问的位置
      - name: Copy APK to artifacts directory
        run: |
          mkdir -p artifacts
          cp build/app/outputs/flutter-apk/app-release.apk artifacts/
      
      # 上传构建产物
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: artifacts/app-release.apk 